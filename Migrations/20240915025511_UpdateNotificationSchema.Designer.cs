// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyanmarWisdomHubAPI.Data;

#nullable disable

namespace MyanmarWisdomHubAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240915025511_UpdateNotificationSchema")]
    partial class UpdateNotificationSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.Attempt_Quiz", b =>
                {
                    b.Property<int>("attempt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("attempt_Id"));

                    b.Property<string>("QuizIdsString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("quiz_ids");

                    b.Property<int>("player_one_score")
                        .HasColumnType("int");

                    b.Property<string>("player_one_username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("player_two_score")
                        .HasColumnType("int");

                    b.Property<string>("player_two_username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("attempt_Id");

                    b.ToTable("Attempt_Quiz");
                });

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("from_user_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_answer")
                        .HasColumnType("bit");

                    b.Property<string>("notification_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to_user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.Proverb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("meaning_burmese")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("meaning_english")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("proverb_burmese")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("proverb_english")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proverb");
                });

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option_four")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option_one")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option_three")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("option_two")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("quiz");
                });

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.Riddle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("riddle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Riddle");
                });

            modelBuilder.Entity("MyanmarWisdomHubAPI.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
